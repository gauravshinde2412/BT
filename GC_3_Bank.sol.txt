// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.0;

contract Bank {
    address public accHolder;
    uint256 private  balance = 0;

    constructor() {
        accHolder = msg.sender;
    }

    // Deposit function
    function deposit() public payable {
        require(msg.value > 0, "Deposit amount should be greater than 0.");
        require(msg.sender == accHolder, "You are not the account owner.");
        
        balance += msg.value;
    }

    // Withdraw function with specified amount
    function withdraw(uint256 amount) public {
        require(amount > 0, "Withdraw amount should be greater than 0.");
        require(amount <= balance, "Insufficient balance.");
        require(msg.sender == accHolder, "You are not the account owner.");
        
        balance -= amount;
        payable(msg.sender).transfer(amount);
    }

    // Fallback function to receive Ether directly
    receive() external payable {
        deposit();
    }
    
    // Show balance function
    function showBalance() public view returns (uint256) {
        require(msg.sender == accHolder, "You are not the account owner.");
        return balance;
    }
}
